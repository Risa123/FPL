const var E 2.718281828459045;PI 3.141592653589793
class Random{
  private ulong seed
  this ulong seed{
    this seed = seed
  }
  fn uint nextInt uint bound{
    seed = seed * 1103515245 + 12345
    return  seed / 65536 % bound;cast uint
  }
}
fn double sin double x{
 var i 1
 var cur x
 double acc 1;fact 1;pow x
 while abs acc; > 0.00000001; && i < 100{
   var a  2 * i
   var b 2 * i + 1
   fact *= a * b
   pow *=  x * x * -1
   acc = pow / fact
   cur += acc
   i ++
 }
 return cur
}
private fn double abs double x{
  if x >= 0{
    return x
  }
  return x -
}
fn double cos double x = sin x + PI / 2
fn double tan double x = sin x; / cos x
fn double cotan double x = 1 / sin x