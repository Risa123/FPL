use std.backend

const var E 2.718281828459045;PI 3.141592653589793
abstract class ARandom{
  fn bool nextBool = nextInt 2; == 1
  (#returns a pseudorandom number between 0 (inclusive) and bound (exclusive).)
  abstract fn uint nextInt uint bound
}
class Random ARandom{
  protected ulong seed
  this ulong seed = this seed = seed
  override fn int nextInt uint bound{
    seed = seed * 1103515245 + 12345
    return seed / 65536 % bound;cast uint
  }
  fn void setSeed ulong seed = this seed = seed
  fn ulong getSeed = seed
}
alias sin std.backend.sin
fn double cos double x = sin x + PI / 2
fn double tan double x = sin x; / cos x
fn double contan double x = 1 / tan x
fn double toRad double x = x * PI / 180
fn double toDeg double x = x * 180 / PI