use{
 std.io.base
 std.backend
}
private{
 [] char 2 READ $r,$\0
 [] char 2 WRITE $w,$\0
}
abstract class FileHandler Closeable{
   protected const void* handle
   this String name char* mode{
      var cname name toCString
      handle = fileOpen cname,mode
      cname free
      if handle == nil{
        IOException:new "unable to open file " + name;;throw
      }
   }
   override fn void close = fileClose handle
}
class FileWriter FileHandler Writable{
  this String name:name,WRITE
  override fn void write byte* p memory size = fileWrite handle,p,size
}
class FileReader FileHandler Readable{
  this String name:name,READ
  override fn void read byte* p memory size = fileRead handle,p,size
  override fn bool ready = fileEOF handle; !
}