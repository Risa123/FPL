use{
 std.io.base
 std.backend
}
abstract class FileHandler Closeable{
   protected const void* handle
   this string name string mode{
      handle = fileOpen name,mode
      if handle == nil{
        IOException ex "unable to open file " + name
        ex throw
      }
   }
   override fn void close = fileClose handle
}
class FileWriter FileHandler Writable{
  this string name:name,"w"
  override fn void write byte* p memory size = fileWrite handle,p,size
}
class FileReader FileHandler Readable{
  this string name:name,"r"
  override fn void read byte* p memory size = fileRead handle,p,size
  override fn bool ready = fileEOF handle; !
}