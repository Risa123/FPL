
interface Closeable{
  fn void close
}
interface Writable Closeable{
  fn void write byte* p memory size
}
interface Readable Closeable{
  fn void read byte* p memory size
  fn bool ready
}
class IOException Exception{
  this String message:message
}
class DataReader Readable{
 private Readable readable
 this Readable readable{
   this readable = readable
 }
 override fn void read byte* p memory size = readable read p,size
 override fn bool ready = readable ready
 override fn void close = readable close
 fn char readChar{
   [] char 1 buf
   readable read buf,1
   return buf drf
 }
}
class DataWriter Writable{
 private Writable writable
 this Writable writable{
   this writable = writable
 }
 override fn void close = writable close
 override fn void write byte* p memory size = writable write p,size
 fn void writeString String str{
   byte* cstr str toCString;cast byte*
   write cstr,str getLength; + 1
   cstr free
 }
}