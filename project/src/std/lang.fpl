(#this module is imported automatically)
use std.backend

class Exception {
   private string message
   this string message {
     this message = message
   }
   virtual fn string getMessage {
     return message
   }
   fn void throw {
     currentThread exception = malloc getObjectSize
     memory i 0L
     puts "x"
     while i < getObjectSize {
       currentThread exception set i,this get i
       i ++
     }
    currentThread throwTarget drf
   }
}
fpointer void throwTargetType
class Thread {
 private string name
 internal {
   Exception* exception
   throwTargetType throwTarget
 }
 fn void setName string name {
   this name = name
 }
 fn string getName {
   return name
 }
}
Thread* currentThread
#these functions will be made inaccessible by compiler
fn void defaultExceptionHandler {
  puts "exception happened:"
  exit 1
}