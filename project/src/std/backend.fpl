native {
 fn int puts string str
 fn void* malloc memory size
 fn void free void* p
 fn void exit int exitCode
 fn void* realloc void* p memory new_size
 private {
    fn memory fwrite void* p memory size memory nmen
    fn bool feof void* file
    fn int system string cmd
    fn void* fopen string name string mode
    fn memory fread void* p memory size memory msize void* file
    fn void fclose void* file
    fn int fflush void* file
    fn void* __acrt_iob_func uint index
    fn int setvbuf void* file byte* buffer int mode memory size
 }
}
private const int STDIN_INDEX 0;STDOUT_INDEX 1;STDERR_INDEX 2
void* stdin __acrt_iob_func STDIN_INDEX
void* stdout __acrt_iob_func STDOUT_INDEX
void* stderr __acrt_iob_func STDERR_INDEX
int IO_FULL_BUFFER 0x0000 #_IOFLBF
int IO_LINE_BUFFER 0x0040 #_IOLBF
int IO_NO_BUFFER 0x0004 #_IONBF
fn int execute string cmd {
  return system cmd
}
fn void file_close void* file {
  fclose file
}
fn void* file_open string name string mode {
   return fopen name,mode
}
fn memory file_read void* file byte* p memory size {
  return fread p cast void*,size,1,file
}
fn memory file_write void* file byte* p memory size {
  return fwrite p cast void*,size,1
}
fn bool file_eof void* file{
   return feof file
}
fn int file_flush void* file{
  return fflush file
}
fn int file_setBuffer void* file byte* buffer int mode memory size{
   return setvbuf file,buffer,mode,size
}