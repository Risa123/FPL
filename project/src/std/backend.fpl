struct DirectoryEntry{
  long nodeNumber
  ushort recordLength;nameLength
  [] char 260 name
}
struct FileStatus{
 uint device
 ushort nodeNumber;mode
 short numberOfHardLinks;userID;groupID
 uint specialDevice #if special file
 long size
 memory accessTime;modifyTime;creationTime
}
native{
 fn int puts char* str
 fn int putchar char c
 fn void* malloc memory size
 fn void free void* p
 fn void exit int exitCode:noReturn
 fn void* realloc void* p memory newSize
 private{
    fn memory fwrite void* p memory size memory nmen void* file
    fn bool feof void* file
    fn int system char* cmd
    fn void* fopen char* path char* mode
    fn memory fread void* p memory size memory msize void* file
    fn void fclose void* file
    fn int fflush void* file
    fn void* __acrt_iob_func uint index
    fn int setvbuf void* file byte* buffer int mode memory size
    fn void* opendir char* path
    fn int closedir void* dir
    fn DirectoryEntry* readdir void* dir
    fn long telldir void* dir
    fn void seekdir void* dir long loc
    fn void rewinddir void* dir
    fn char* strerror int errnum
    fn int* _errno
    fn int ferror void* file
    fn int stat char* path FileStatus* status
 }
}
private const int STDIN_INDEX 0;STDOUT_INDEX 1;STDERR_INDEX 2
void* stdin __acrt_iob_func STDIN_INDEX
void* stdout __acrt_iob_func STDOUT_INDEX
void* stderr __acrt_iob_func STDERR_INDEX
int IO_FULL_BUFFER 0x0000 #_IOFLBF
int IO_LINE_BUFFER 0x0040 #_IOLBF
int IO_NO_BUFFER 0x0004 #_IONBF
alias execute system
alias fileClose fclose
alias fileOpen fopen
fn memory fileRead void* file byte* p memory size = fread p cast void*,size,1,file
fn memory fileWrite void* file byte* p memory size = fwrite p cast void*,size,1,file
alias fileEOF feof
alias fileFlush fflush
fn int fileSetBuffer void* file byte* buffer int mode memory size = setvbuf file,buffer,mode,size
compIf arch x64{
 typedef Context [] 32 memory
}
compIf arch x86{
 typedef Context [] 16 memory
}
compIf arch ia64{
 typedef Context [] 32 memory
}
fn void contextRestore Context context{
  native fn void __builtin_longjmp Context context int value
  return __builtin_longjmp context,1
}
fn void* directoryOpen char* name{
  var dir opendir name
  #skip . and .. entries
  readdir dir
  readdir dir
  return dir
}
fn void;T; free[] T* this memory len{
 var i 0L
 while i < len{
   [ this + i ] free
   i ++
 }
 free this cast void*
}
fn void free[] void* p memory len = free p
alias directoryRead readdir
alias directoryClose closedir
alias directoryTell telldir
alias directorySeek seekdir
alias directoryReset rewinddir
alias fileError ferror
alias FS_status stat
fn char* getErrorMessage int errnum = strerror errnum
fn char* getErrNoMessage = getErrorMessage _errno; drf
private var S_IFDIR 0x4000;S_IFREG 0x8000;S_IFMT 0xF000
fn bool FS_isDirectory FileStatus* status = [ status mode & S_IFMT ] == S_IFDIR
fn bool FS_isFile FileStatus* status = [ status mode & S_IFMT ] == S_IFREG
fn memory FS_getSize FileStatus* status = status size